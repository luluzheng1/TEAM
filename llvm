; ModuleID = 'TEAM'
source_filename = "TEAM"

%list_item = type <{ i8*, %list_item* }>

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.3 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1

declare i32 @printf(i8*, ...)

declare double @pow(double, double)

define i32 @main() {
entry:
  ret i32 0
}

define void @test(%list_item** %a) {
entry:
  %a1 = alloca %list_item**, align 8
  store %list_item** %a, %list_item*** %a1, align 8
  %c = alloca %list_item**, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %new_list_ptr = bitcast i8* %malloccall to %list_item**
  %a2 = load %list_item**, %list_item*** %a1, align 8
  %ilist = load %list_item*, %list_item** %a2, align 8
  %last_node_ptr_ptr = call %list_item** @list_copy_int(%list_item* %ilist, i32 -1, %list_item** %new_list_ptr)
  %last_node_ptr = load %list_item*, %list_item** %last_node_ptr_ptr, align 8
  %last_next_ptr_ptr = getelementptr inbounds %list_item, %list_item* %last_node_ptr, i32 0, i32 1
  %malloccall3 = tail call i8* @malloc(i32 ptrtoint (%list_item* getelementptr (%list_item, %list_item* null, i32 1) to i32))
  %new_node_ptr = bitcast i8* %malloccall3 to %list_item*
  store %list_item zeroinitializer, %list_item* %new_node_ptr, align 1
  %data_ptr_ptr = getelementptr inbounds %list_item, %list_item* %new_node_ptr, i32 0, i32 0
  %malloccall4 = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %new_data_ptr = bitcast i8* %malloccall4 to i32*
  store i32 5, i32* %new_data_ptr, align 4
  %casted_new_data_ptr = bitcast i32* %new_data_ptr to i8*
  store i8* %casted_new_data_ptr, i8** %data_ptr_ptr, align 8
  store %list_item* %new_node_ptr, %list_item** %last_next_ptr_ptr, align 8
  store %list_item** %new_list_ptr, %list_item*** %c, align 8
  ret void
}

declare noalias i8* @malloc(i32)

define %list_item** @list_copy_int(%list_item* %0, i32 %1, %list_item** %2) {
entry:
  %is_zero = icmp eq i32 %1, 0
  %ptr_is_null = icmp eq %list_item* %0, null
  %or_conds = or i1 %is_zero, %ptr_is_null
  br i1 %or_conds, label %then, label %else

then:                                             ; preds = %entry
  ret %list_item** %2

else:                                             ; preds = %entry
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%list_item* getelementptr (%list_item, %list_item* null, i32 1) to i32))
  %new_struct_ptr = bitcast i8* %malloccall to %list_item*
  store %list_item zeroinitializer, %list_item* %new_struct_ptr, align 1
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %ltyp = bitcast i8* %malloccall1 to i32*
  %old_data_ptr_ptr = getelementptr inbounds %list_item, %list_item* %0, i32 0, i32 0
  %old_data_ptr = load i8*, i8** %old_data_ptr_ptr, align 8
  %cast_old_data_ptr = bitcast i8* %old_data_ptr to i32*
  %old_data = load i32, i32* %cast_old_data_ptr, align 4
  store i32 %old_data, i32* %ltyp, align 4
  %data_ptr_cast = bitcast i32* %ltyp to i8*
  %store_new_data = getelementptr inbounds %list_item, %list_item* %new_struct_ptr, i32 0, i32 0
  store i8* %data_ptr_cast, i8** %store_new_data, align 8
  store %list_item* %new_struct_ptr, %list_item** %2, align 8
  %next = getelementptr inbounds %list_item, %list_item* %new_struct_ptr, i32 0, i32 1
  %next_ptr = getelementptr inbounds %list_item, %list_item* %0, i32 0, i32 1
  %next2 = load %list_item*, %list_item** %next_ptr, align 8
  %sub = sub i32 %1, 1
  %3 = call %list_item** @list_copy_int(%list_item* %next2, i32 %sub, %list_item** %next)
  ret %list_item** %3
}
